#ifndef ERRORS_H
#define ERRORS_H

/*all the possible errors*/
typedef enum errors{
	GET_NUM_OF_ERRORS = 999,
	EQUATE_TO_ZERO = 998,
	CORRECT = 0,

	/*file*/	
	NAME_ERROR,  
	DONT_EXIST_FILE_ERROR,

    /*macro*/
    MACRO_NAME_INCORRECT,
    TOO_MANY_MACRO_ARGUMENTS,
    END_MACRO_ARGUMENTS,
    MACRO_SYSTEM_WORD_ERROR,
    MACRO_REGISTER_ERROR,
	MACRO_ALREADY_EXIST_ERROR,

	/*line*/
	SYNTAX_ERROR, 
	TOO_LONG_LINE_COMMAND_ERROR,

	/*data*/
	NO_DATA_ARGUMENTS,
	NOT_ENOUGH_DATA,
	NOT_EXIST_ADRESS_IN_DATA,
	TWO_COMMAS_IN_ROW_ERROR,

	/*label*/
	LABEL_ERROR_NAME,
	LENGTH_LABEL_ERROR,
	LABEL_DONT_EXIST,
	LABEL_COLON_ERROR,
	LABEL_ALREADY_EXIST_ERROR,
	LABEL_SYSTEM_WORD_ERROR,
    LABEL_REGISTER_ERROR,
	WARNING_LABEL,
	LABEL_MACRO_ERROR,

	/*Symbol*/
	SYMBOL_ALREADY_EXIST_ERROR,
	DEFINE_ERROR_NAME,
	DEFINE_ALREADY_EXIST_ERROR,
	DEFINE_SYSTEM_WORD_ERROR,
	DEFINE_REGISTER_ERROR,
	DEFINE_ERROR_NUMBER,
	DEFINE_ERROR_EQUALL,
	DEFINE_ERROR_NOT_EXIST_YET,

	/*Array*/
	TOO_MANY_ARRAY_ARGUMENTS,
	NO_ARRAY_ARGUMENTS,

	/*instruction*/
	TOO_MANY_INSTRUCTION_ARGUMENTS,
	TOO_MANY_ENTRY_ARGUMENTS,
	TOO_MANY_EXTERNAL_ARGUMENTS,

	/*operands*/		
	TOO_MANY_OPERANDS,
	FEWER_OPERANDS,
	REGISTER_DONT_EXIST,
	KEY_WORD_INCORRECT,
	EXTERNAL_ENTRY_TOGETHER_ERROR,
	SIZE_NUMBER_ERROR,
	ADDRESING_METHOD_ERROR,

	/*allocation*/
	ALLOCATION_ERROR	
}err;

/*prints the error if there is some*/ 
void print_errors(int error_type, int num_of_line, int *exeptions, char *note);







#endif